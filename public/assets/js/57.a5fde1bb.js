(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{446:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_3-自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-自定义指令"}},[s._v("#")]),s._v(" 3 自定义指令")]),s._v(" "),t("h4",{attrs:{id:"_3-1-自定义指令的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-自定义指令的分类"}},[s._v("#")]),s._v(" 3.1 自定义指令的分类")]),s._v(" "),t("p",[s._v("vue中的自定义指令分为两类，分别是：")]),s._v(" "),t("ul",[t("li",[s._v("私有自定义指令")]),s._v(" "),t("li",[s._v("全局自定义指令")])]),s._v(" "),t("h5",{attrs:{id:"_3-1-1-私有自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-私有自定义指令"}},[s._v("#")]),s._v(" 3.1.1 私有自定义指令")]),s._v(" "),t("p",[s._v("在每个vue组件中，可以在directives节点下声明私有自定义指令。示例代码如下：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h1 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"color"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("App 根组件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("h1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 私有自定义指令的节点")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("directives")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义名为 color 的指令，指向一个配置对象")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* color: {\n      // 当指令第一次被绑定到元素上的时候，会立即触发 bind 函数\n      // 形参中的 el 表示当前指令所绑定到的那个 DOM 对象\n      bind(el, binding) {\n        console.log('触发了 v-color 的 bind 函数')\n        el.style.color = binding.value\n      },\n      // 在 DOM 更新的时候，会触发 update 函数\n      update(el, binding) {\n        console.log('触发了 v-color 的 update 函数')\n        el.style.color = binding.value\n      }\n    } */")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h5",{attrs:{id:"_3-1-2-全局自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-全局自定义指令"}},[s._v("#")]),s._v(" 3.1.2 全局自定义指令")]),s._v(" "),t("ul",[t("li",[s._v("全局共享的自定义指令需要通过 “Vue.directive()” 进行声明，示例代码如下：")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("directive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'color'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("binding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 全局自定义指令，定义以后可以在项目的任何地方使用这个v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("color，有点和过滤器类似！\n    Vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'过滤器名字'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cosole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'这里是过滤器的执行函数！'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h5",{attrs:{id:"_3-1-3-eslint-代码检查工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-eslint-代码检查工具"}},[s._v("#")]),s._v(" 3.1.3 ESLint 代码检查工具")]),s._v(" "),t("h6",{attrs:{id:"关于"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[s._v("#")]),s._v(" 关于")]),s._v(" "),t("blockquote",[t("p",[s._v("ESLint 是一个开源的 JavaScript 代码检查工具，由 Nicholas C. Zakas 于2013年6月创建。代码检查是一种静态的分析，常用于寻找有问题的模式或者代码，并且不依赖于具体的编码风格。对大多数编程语言来说都会有代码检查，一般来说编译程序会内置检查工具。")]),s._v(" "),t("p",[s._v("JavaScript 是一个动态的弱类型语言，在开发中比较容易出错。因为没有编译程序，为了寻找 JavaScript 代码错误通常需要在执行过程中不断调试。像 ESLint 这样的可以让程序员在编码的过程中发现问题而不是在执行的过程中。")]),s._v(" "),t("p",[s._v("ESLint 的初衷是为了让程序员可以创建自己的检测规则。ESLint 的所有规则都被设计成可插入的。ESLint 的默认规则与其他的插件并没有什么区别，规则本身和测试可以依赖于同样的模式。为了便于人们使用，ESLint 内置了一些规则，当然，你可以在使用过程中自定义规则。")]),s._v(" "),t("p",[s._v("ESLint 使用 Node.js 编写，这样既可以有一个快速的运行环境的同时也便于安装。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("ESLink文档官网：https")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("eslint.bootcss.com")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("p",[t("em",[s._v("说白了就是在团队开发中约束每个开发人员的代码规范，比如：代码换行是4个空格还是2个空格等等。比如规范化2个空格为换行，你在代码中写了4个空格就会报错提示你。")])]),s._v(" "),t("blockquote",[t("p",[s._v("在vscod中设置代码规范的方法：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("管理（小齿轮）、设置、搜索[tabsize]，这里就是改了代码换行的空格数字")]),s._v(" "),t("p",[t("img",{attrs:{src:"C:/Users/85839/AppData/Roaming/Typora/typora-user-images/image-20220720210738278.png",alt:"image-20220720210738278"}})]),s._v(" "),t("p",[s._v("2.搜索format ，这里也要打勾（默认就是勾上的）")]),s._v(" "),t("p",[t("img",{attrs:{src:"C:/Users/85839/AppData/Roaming/Typora/typora-user-images/image-20220720210950818.png",alt:"image-20220720210950818"}})])])])]),s._v(" "),t("h6",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),t("p",[t("strong",[s._v("下面创建一个全新的vue-cli来使用ESLint，手动安装带ESLint的vue-cli项目")])]),s._v(" "),t("p",[t("strong",[s._v("步骤如下：")])]),s._v(" "),t("p",[s._v("步骤1")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/78fa3c44e0364c2d9d6453e55afb095f.png",alt:"image-20220720211625032"}})]),s._v(" "),t("p",[s._v("步骤2")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/0d5b7696dbec41be944642a0c2c23ed4.png",alt:"image-20220720211744136"}})]),s._v(" "),t("p",[s._v("步骤3")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/f96c591808b54ae3a9c7ba2c7af33ab8.png",alt:"image-20220720211955850"}})]),s._v(" "),t("p",[s._v("步骤4")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/a8a7e19e2fd7459b88971a8f71754e00.png",alt:"image-20220720212053843"}})]),s._v(" "),t("p",[s._v("步骤5")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/e686d9a966d0463c9d2408892bd0667d.png",alt:"image-20220720212139256"}})]),s._v(" "),t("p",[s._v("步骤6")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/c5cb402a8b02494cac8eb81d606b4077.png",alt:"image-20220720212319763"}})]),s._v(" "),t("p",[s._v("步骤7")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/0afaf846ed454274808bffe282f523e9.png",alt:"image-20220720212542566"}})]),s._v(" "),t("p",[s._v("步骤8")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/235ed3c193f64818a68224c6442aee90.png",alt:"image-20220720212858144"}})]),s._v(" "),t("p",[s._v("步骤9")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/995150d3de89469c85f03ceae10504fe.png",alt:"image-20220720213035017"}})]),s._v(" "),t("p",[s._v("安装项目中")]),s._v(" "),t("p",[t("strong",[s._v("安装过程中最好不好切窗口，耐心等待。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/ad9d7dfb42db476f82a0732a390f2a7a.png",alt:"image-20220720213114953"}})]),s._v(" "),t("p",[s._v("这样就安装完成了")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/b44706c40f88421ab1820e376d24201b.png",alt:"image-20220720213247361"}})]),s._v(" "),t("p",[s._v("作者：星月")]),s._v(" "),t("p",[s._v("个人博客："),t("a",{attrs:{href:"https://xingyue.vercel.app/",target:"_blank",rel:"noopener noreferrer"}},[s._v("星月前端个人博客"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/6311c9b116e149d096660e88c801f095.png",alt:"image-20220720213247361"}})]),s._v(" "),t("ul",[t("li",[s._v("到这里带ESLint的vue2.0项目就安装好了。")]),s._v(" "),t("li",[s._v("在项目首页会有一个名字为.eslintrc.js的配置文件.")]),s._v(" "),t("li",[s._v("当我们在开发中，规范错误了的话，解决方法：")]),s._v(" "),t("li",[s._v("（1）去ESLint官方文档搜这个错误，如图")]),s._v(" "),t("li",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/af3fff5b0f8e4591bb08e1ae6f7e3973.png",alt:"image-20220720231139522"}})])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/ca60f5260d1e482892ed297b3af1d5a6.png",alt:"image-20220720231301482"}})]),s._v(" "),t("p",[t("strong",[s._v("会了这些肯定是不行的，开发效率太低了，我们在vscod上安装一些插件来辅助开发，自动调整代码格式：")])]),s._v(" "),t("blockquote",[t("p",[s._v("1.ESLint (作者：Dirk Baeumer)")]),s._v(" "),t("p",[s._v("安装好了需要加一点配置文件。vscod、小齿轮、设置、右上角差分页面旁边的一个（打开设置，），打开后是vscod的settings.json文件。然后在顶部添加下面的代码：")]),s._v(" "),t("p",[t("em",[s._v("//ESlint 插件的配置")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"editor.codeActionsOnSave"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v('"source.fixAll"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("blockquote",[t("p",[s._v("2.prettier - Code formatter (作者：prettier)")]),s._v(" "),t("p",[s._v("安装后也是在项目的根目录下新建一个文件  .prettierrc.js 在文件里面放入下面的代码：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 2 个空格缩进")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("tabWidth")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不使用缩进符，而使用空格")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("useTabs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 行尾需要有分号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("semi")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用单引号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("singleQuote")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象的 key 仅在必要时用引号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("quoteProps")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'as-needed'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// jsx 不使用单引号，而使用双引号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("jsxSingleQuote")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 末尾不需要逗号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("trailingComma")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'none'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 大括号内的首尾需要空格")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("bracketSpacing")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// jsx 标签的反尖括号需要换行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("jsxBracketSameLine")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 箭头函数，只有一个参数的时候，也需要括号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("arrowParens")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'always'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每个文件格式化的范围是文件的全部内容")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("rangeStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("rangeEnd")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("Infinity")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不需要写文件开头的 @prettier")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("requirePragma")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不需要自动在文件开头插入 @prettier")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("insertPragma")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用默认的折行标准")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("proseWrap")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'preserve'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据显示样式决定 html 要不要折行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("htmlWhitespaceSensitivity")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'css'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 换行符使用 lf")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("endOfLine")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lf'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("现在你就可以使用 alt+shift+f 组合键来快速格式化你在VS Code中的代码了。")])]),s._v(" "),t("p",[s._v("如果你有其他插件，格式化文档的默认不是 prettier - Code formatter ，那么在项目中 右键鼠标、设置格式化文档的方式、选到prettier就好了。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);